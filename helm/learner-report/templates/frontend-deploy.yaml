apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: {{ include "lr.ns" . }}
  labels: { app: frontend }
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector: { matchLabels: { app: frontend } }
  template:
    metadata: { labels: { app: frontend } }
    spec:
      containers:
        - name: fe
          image: "{{ .Values.image.registry }}/{{ .Values.frontend.image }}:{{ .Values.frontend.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: [ { containerPort: {{ .Values.frontend.port }} } ]
          env: {{- toYaml .Values.frontend.env | nindent 12 }}
          resources: {{- toYaml .Values.frontend.resources | nindent 12 }}
          readinessProbe:
            httpGet: { path: "/", port: {{ .Values.frontend.port }} }
            initialDelaySeconds: 5
          livenessProbe:
            httpGet: { path: "/", port: {{ .Values.frontend.port }} }
            initialDelaySeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: {{ include "lr.ns" . }}
spec:
  type: ClusterIP
  selector: { app: frontend }
  ports:
    - port: 80
      targetPort: {{ .Values.frontend.port }}
