apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Values.namespace | default "default" }}
  labels: { app: backend }
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels: { app: backend }
  template:
    metadata:
      labels: { app: backend }
    spec:
      containers:
        - name: be
          image: "{{ .Values.image.registry }}/{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.port }}
          # âœ… Correct: each item is a configMapRef or secretRef
          envFrom:
            - configMapRef:
                name: learner-report-config
            - secretRef:
                name: learner-report-secret
          env:
            {{- toYaml .Values.backend.env | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.backend.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.backend.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: {{ .Values.namespace | default "default" }}
spec:
  type: ClusterIP
  selector: { app: backend }
  ports:
    - port: 3000
      targetPort: {{ .Values.backend.port }}
